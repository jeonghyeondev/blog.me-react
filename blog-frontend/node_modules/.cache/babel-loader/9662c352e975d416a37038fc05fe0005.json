{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/auth/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst RegisterForm = ({\n  history\n}) => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const {\n    form,\n    auth,\n    authError,\n    user\n  } = useSelector(({\n    auth,\n    user\n  }) => ({\n    form: auth.register,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user\n  })); // 인풋 변경 핸들러\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField({\n      form: 'register',\n      key: name,\n      value\n    }));\n  }; // 폼 등록 이벤트 핸들러\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password,\n      passwordConfirm\n    } = form; // 하나라도 비어 있다면\n\n    if ([username, password, passwordConfirm].includes('')) {\n      setError('빈 칸을 모두 입력하세요.');\n      return;\n    }\n\n    if (password !== passwordConfirm) {\n      // TODO: 오류처리\n      return;\n    }\n\n    dispatch(register({\n      username,\n      password\n    }));\n  }; // 컴포넌트가 처음 렌덩링될 때 form 초기화함\n\n\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]); // 회원가입 성공/실패 처리\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      return;\n    }\n\n    if (auth) {\n      console.log('회원가입 성공');\n      console.log(auth);\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]); // user 값이 잘 설정되었는지 확인\n\n  useEffect(() => {\n    if (user) {\n      history.push('/'); // 홈 화면으로 이동\n    }\n  }, [history, user]);\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"register\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"EM9tAJDAw+2iA3Av+vVIkPYU5Yo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterForm;\nexport default _c2 = withRouter(RegisterForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RegisterForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/auth/RegisterForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","changeField","initializeForm","register","AuthForm","check","withRouter","RegisterForm","history","error","setError","dispatch","form","auth","authError","user","onChange","e","value","name","target","key","onSubmit","preventDefault","username","password","passwordConfirm","includes","console","log","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst RegisterForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.register,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n\n  // 인풋 변경 핸들러\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'register',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { username, password, passwordConfirm } = form;\n    // 하나라도 비어 있다면\n    if ([username, password, passwordConfirm].includes('')) {\n      setError('빈 칸을 모두 입력하세요.');\n      return;\n    }\n    if (password !== passwordConfirm) {\n      // TODO: 오류처리\n      return;\n    }\n    dispatch(register({ username, password }));\n  };\n\n  // 컴포넌트가 처음 렌덩링될 때 form 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]);\n\n  // 회원가입 성공/실패 처리\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      return;\n    }\n    if (auth) {\n      console.log('회원가입 성공');\n      console.log(auth);\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  // user 값이 잘 설정되었는지 확인\n  useEffect(() => {\n    if (user) {\n      history.push('/'); // 홈 화면으로 이동\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"register\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n    ></AuthForm>\n  );\n};\n\nexport default withRouter(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}