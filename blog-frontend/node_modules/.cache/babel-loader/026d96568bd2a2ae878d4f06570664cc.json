{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions'; // import createRequestSaga, {\n// createRequestActionTypes,\n// } from '../lib/createRequestSaga';\n// import * as postsAPI from '../lib/api/posts';\n// import { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'write/INITIALIZE'; // 모든 내용 초기화\n\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\n// const [\n//   WRITE_POST,\n//   WRITE_POST_SUCCESS,\n//   WRITE_POST_FAILURE,\n// ] = createRequestActionTypes('wrtie/WRITE_POST'); // 포스트 작성\n\nexport const initialize = createAction(INITIALIZE);\nexport const changeField = createAction(CHANGE_FIELD, ({\n  key,\n  value\n}) => ({\n  key,\n  value\n})); // export const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\n//   title,\n//   body,\n//   tags,\n// }));\n// // 사가 생성\n// const writePostSaga = createRequestSaga(WRITE_POST, postsAPI.writePost);\n// export function* wrtieSaga() {\n//   yield takeLatest(WRITE_POST, writePostSaga);\n// }\n\nconst initialState = {\n  title: '',\n  body: '',\n  tags: [] // post: null,\n  // postError: null,\n\n};\nconst write = handleActions({\n  [INITIALIZE]: state => initialState,\n  // initialState를 넣으면 초기 상태로 바뀜\n  [CHANGE_FIELD]: (state, {\n    payload: {\n      key,\n      value\n    }\n  }) => ({ ...state,\n    [key]: value // 특정 key 값을 업데이트\n\n  }) // [WRITE_POST]: (state) => ({\n  //   ...state,\n  //   // post와 postError을 초기화\n  //   post: null,\n  //   postError: null,\n  // }),\n  // // 포스트 작성 성공\n  // [WRITE_POST_SUCCESS]: (state, { payload: post }) => ({\n  //   ...state,\n  //   post,\n  // }),\n  // // 포스트 작성 실패\n  // [WRITE_POST_FAILURE]: (state, { payload: postError }) => ({\n  //   ...state,\n  //   postError,\n  // }),\n\n}, initialState);\nexport default write;","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/modules/write.js"],"names":["createAction","handleActions","INITIALIZE","CHANGE_FIELD","initialize","changeField","key","value","initialState","title","body","tags","write","state","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C,C,CACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,kBAAnB,C,CAAuC;;AACvC,MAAMC,YAAY,GAAG,oBAArB,C,CAA2C;AAC3C;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGJ,YAAY,CAACE,UAAD,CAA/B;AACP,OAAO,MAAMG,WAAW,GAAGL,YAAY,CAACG,YAAD,EAAe,CAAC;AAAEG,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,MAAqB;AACzED,EAAAA,GADyE;AAEzEC,EAAAA;AAFyE,CAArB,CAAf,CAAhC,C,CAKP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,IAAI,EAAE,EAHa,CAInB;AACA;;AALmB,CAArB;AAQA,MAAMC,KAAK,GAAGX,aAAa,CACzB;AACE,GAACC,UAAD,GAAeW,KAAD,IAAWL,YAD3B;AACyC;AACvC,GAACL,YAAD,GAAgB,CAACU,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAER,MAAAA,GAAF;AAAOC,MAAAA;AAAP;AAAX,GAAR,MAAyC,EACvD,GAAGM,KADoD;AAEvD,KAACP,GAAD,GAAOC,KAFgD,CAEzC;;AAFyC,GAAzC,CAFlB,CAME;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBF,CADyB,EAwBzBC,YAxByB,CAA3B;AA2BA,eAAeI,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\n// import createRequestSaga, {\n// createRequestActionTypes,\n// } from '../lib/createRequestSaga';\n// import * as postsAPI from '../lib/api/posts';\n// import { takeLatest } from 'redux-saga/effects';\n\nconst INITIALIZE = 'write/INITIALIZE'; // 모든 내용 초기화\nconst CHANGE_FIELD = 'write/CHANGE_FIELD'; // 특정 key 값 바꾸기\n// const [\n//   WRITE_POST,\n//   WRITE_POST_SUCCESS,\n//   WRITE_POST_FAILURE,\n// ] = createRequestActionTypes('wrtie/WRITE_POST'); // 포스트 작성\n\nexport const initialize = createAction(INITIALIZE);\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\n  key,\n  value,\n}));\n\n// export const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\n//   title,\n//   body,\n//   tags,\n// }));\n\n// // 사가 생성\n// const writePostSaga = createRequestSaga(WRITE_POST, postsAPI.writePost);\n// export function* wrtieSaga() {\n//   yield takeLatest(WRITE_POST, writePostSaga);\n// }\n\nconst initialState = {\n  title: '',\n  body: '',\n  tags: [],\n  // post: null,\n  // postError: null,\n};\n\nconst write = handleActions(\n  {\n    [INITIALIZE]: (state) => initialState, // initialState를 넣으면 초기 상태로 바뀜\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\n      ...state,\n      [key]: value, // 특정 key 값을 업데이트\n    }),\n    // [WRITE_POST]: (state) => ({\n    //   ...state,\n    //   // post와 postError을 초기화\n    //   post: null,\n    //   postError: null,\n    // }),\n    // // 포스트 작성 성공\n    // [WRITE_POST_SUCCESS]: (state, { payload: post }) => ({\n    //   ...state,\n    //   post,\n    // }),\n    // // 포스트 작성 실패\n    // [WRITE_POST_FAILURE]: (state, { payload: postError }) => ({\n    //   ...state,\n    //   postError,\n    // }),\n  },\n  initialState,\n);\n\nexport default write;\n"]},"metadata":{},"sourceType":"module"}