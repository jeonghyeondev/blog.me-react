{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import{call,put}from'redux-saga/effects';import{startLoading,finishLoading}from'../modules/loading';export var createRequestActionTypes=function createRequestActionTypes(type){var SUCCESS=\"\".concat(type,\"_SUCCESS\");var FAILURE=\"\".concat(type,\"_FAILURE\");return[type,SUCCESS,FAILURE];};export default function createRequestSaga(type,request){var SUCCESS=\"\".concat(type,\"_SUCCESS\");var FAILURE=\"\".concat(type,\"_FAILURE\");return/*#__PURE__*/_regeneratorRuntime.mark(function _callee(action){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(startLoading(type));case 2:_context.prev=2;_context.next=5;return call(request,action.payload);case 5:response=_context.sent;_context.next=8;return put({type:SUCCESS,payload:response.data,meta:response});case 8:_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);_context.next=14;return put({type:FAILURE,payload:_context.t0,error:true});case 14:_context.next=16;return put(finishLoading(type));case 16:case\"end\":return _context.stop();}}},_callee,null,[[2,10]]);});}","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/lib/createRequestSaga.js"],"names":["call","put","startLoading","finishLoading","createRequestActionTypes","type","SUCCESS","FAILURE","createRequestSaga","request","action","payload","response","data","meta","error"],"mappings":"wKAAA,OAASA,IAAT,CAAeC,GAAf,KAA0B,oBAA1B,CACA,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,oBAA5C,CAEA,MAAO,IAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,IAAD,CAAU,CAChD,GAAMC,CAAAA,OAAO,WAAMD,IAAN,YAAb,CACA,GAAME,CAAAA,OAAO,WAAMF,IAAN,YAAb,CACA,MAAO,CAACA,IAAD,CAAOC,OAAP,CAAgBC,OAAhB,CAAP,CACD,CAJM,CAMP,cAAe,SAASC,CAAAA,iBAAT,CAA2BH,IAA3B,CAAiCI,OAAjC,CAA0C,CACvD,GAAMH,CAAAA,OAAO,WAAMD,IAAN,YAAb,CACA,GAAME,CAAAA,OAAO,WAAMF,IAAN,YAAb,CAEA,4CAAO,iBAAWK,MAAX,+IACL,MAAMT,CAAAA,GAAG,CAACC,YAAY,CAACG,IAAD,CAAb,CAAT,CADK,uCAGc,MAAML,CAAAA,IAAI,CAACS,OAAD,CAAUC,MAAM,CAACC,OAAjB,CAAV,CAHd,OAGGC,QAHH,+BAIH,MAAMX,CAAAA,GAAG,CAAC,CACRI,IAAI,CAAEC,OADE,CAERK,OAAO,CAAEC,QAAQ,CAACC,IAFV,CAGRC,IAAI,CAAEF,QAHE,CAAD,CAAT,CAJG,yGAUH,MAAMX,CAAAA,GAAG,CAAC,CACRI,IAAI,CAAEE,OADE,CAERI,OAAO,YAFC,CAGRI,KAAK,CAAE,IAHC,CAAD,CAAT,CAVG,yBAgBL,MAAMd,CAAAA,GAAG,CAACE,aAAa,CAACE,IAAD,CAAd,CAAT,CAhBK,qEAAP,EAkBD","sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\n\nexport const createRequestActionTypes = (type) => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n\n  return function* (action) {\n    yield put(startLoading(type)); // 로딩 시작\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n        meta: response,\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true,\n      });\n    }\n    yield put(finishLoading(type)); // 로딩 끝\n  };\n}\n"]},"metadata":{},"sourceType":"module"}