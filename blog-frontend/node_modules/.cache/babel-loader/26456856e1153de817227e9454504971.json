{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/containers/post/PostViewerContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport PostActionButtons from '../../components/post/PostActionButtons';\n\nconst PostViewerContainer = ({\n  match\n}) => {\n  _s();\n\n  // 처음 마운트될 때 포스트 읽기 API 요청\n  const {\n    postId\n  } = match.params;\n  const dispatch = useDispatch();\n  const {\n    post,\n    error,\n    loading\n  } = useSelector(({\n    post,\n    loading\n  }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST']\n  }));\n  useEffect(() => {\n    dispatch(readPost(postId)); // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n  return /*#__PURE__*/_jsxDEV(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PostViewerContainer, \"vb4c2O5IgOlif/fkeMzCaw43qPI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostViewerContainer;\nexport default _c2 = withRouter(PostViewerContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostViewerContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/containers/post/PostViewerContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","readPost","unloadPost","PostViewer","PostActionButtons","PostViewerContainer","match","postId","params","dispatch","post","error","loading"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACzC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,MAAzB;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2Bb,WAAW,CAAC,CAAC;AAAEW,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAD,MAAwB;AACnEF,IAAAA,IAAI,EAAEA,IAAI,CAACA,IADwD;AAEnEC,IAAAA,KAAK,EAAED,IAAI,CAACC,KAFuD;AAGnEC,IAAAA,OAAO,EAAEA,OAAO,CAAC,gBAAD;AAHmD,GAAxB,CAAD,CAA5C;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACR,QAAQ,CAACM,MAAD,CAAT,CAAR,CADc,CAEd;;AACA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACD,KAFD;AAGD,GANQ,EAMN,CAACO,QAAD,EAAWF,MAAX,CANM,CAAT;AAQA,sBAAO,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEG,IAAlB;AAAwB,IAAA,OAAO,EAAEE,OAAjC;AAA0C,IAAA,KAAK,EAAED;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBD;;GAAMN,mB;UAGaP,W,EACgBC,W;;;KAJ7BM,mB;AAqBN,qBAAeL,UAAU,CAACK,mBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport PostActionButtons from '../../components/post/PostActionButtons';\n\nconst PostViewerContainer = ({ match }) => {\n  // 처음 마운트될 때 포스트 읽기 API 요청\n  const { postId } = match.params;\n  const dispatch = useDispatch();\n  const { post, error, loading } = useSelector(({ post, loading }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST'],\n  }));\n\n  useEffect(() => {\n    dispatch(readPost(postId));\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n\n  return <PostViewer post={post} loading={loading} error={error} />;\n};\n\nexport default withRouter(PostViewerContainer);\n"]},"metadata":{},"sourceType":"module"}