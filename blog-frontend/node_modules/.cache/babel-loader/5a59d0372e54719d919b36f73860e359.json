{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\nconst [LIST_POSTS, LIST_POSTS_SUCCESS, LIST_POSTS_FAILURE] = createRequestActionTypes('posts/LIST_POSTS');\nexport const listPosts = createAction(LIST_POSTS, ({\n  tag,\n  username,\n  page\n}) => ({\n  tag,\n  username,\n  page\n}));\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n}\nconst initialState = {\n  posts: null,\n  error: null\n};\nconst posts = handleActions({\n  [LIST_POSTS_SUCCESS]: (state, {\n    payload: posts\n  }) => ({ ...tate,\n    posts\n  }),\n  [LIST_POSTS_FAILURE]: (state, {\n    payload: error\n  }) => ({ ...state,\n    error\n  })\n}, initialState);\nexport default posts;","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/modules/posts.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","tag","username","page","listPostsSaga","postsSaga","initialState","posts","error","state","payload","tate"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,MAAM,CACJC,UADI,EAEJC,kBAFI,EAGJC,kBAHI,IAIFL,wBAAwB,CAAC,kBAAD,CAJ5B;AAMA,OAAO,MAAMM,SAAS,GAAGT,YAAY,CACnCM,UADmC,EAEnC,CAAC;AAAEI,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,MAA8B;AAAEF,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAA9B,CAFmC,CAA9B;AAKP,MAAMC,aAAa,GAAGX,iBAAiB,CAACI,UAAD,EAAaF,QAAQ,CAACK,SAAtB,CAAvC;AACA,OAAO,UAAUK,SAAV,GAAsB;AAC3B,QAAMT,UAAU,CAACC,UAAD,EAAaO,aAAb,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,MAAMD,KAAK,GAAGf,aAAa,CACzB;AACE,GAACM,kBAAD,GAAsB,CAACW,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,MAAgC,EACpD,GAAGI,IADiD;AAEpDJ,IAAAA;AAFoD,GAAhC,CADxB;AAKE,GAACR,kBAAD,GAAsB,CAACU,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEF;AAAX,GAAR,MAAgC,EACpD,GAAGC,KADiD;AAEpDD,IAAAA;AAFoD,GAAhC;AALxB,CADyB,EAWzBF,YAXyB,CAA3B;AAcA,eAAeC,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n  LIST_POSTS,\n  LIST_POSTS_SUCCESS,\n  LIST_POSTS_FAILURE,\n] = createRequestActionTypes('posts/LIST_POSTS');\n\nexport const listPosts = createAction(\n  LIST_POSTS,\n  ({ tag, username, page }) => ({ tag, username, page }),\n);\n\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n}\n\nconst initialState = {\n  posts: null,\n  error: null,\n};\n\nconst posts = handleActions(\n  {\n    [LIST_POSTS_SUCCESS]: (state, { payload: posts }) => ({\n      ...tate,\n      posts,\n    }),\n    [LIST_POSTS_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState,\n);\n\nexport default posts;\n"]},"metadata":{},"sourceType":"module"}