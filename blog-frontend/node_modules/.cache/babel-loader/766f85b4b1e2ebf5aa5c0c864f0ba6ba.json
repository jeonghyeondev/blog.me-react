{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/containers/posts/PostListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\n\nconst PostListContainer = ({\n  location\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    posts,\n    error,\n    loading,\n    user\n  } = useSelector(({\n    posts,\n    loading,\n    user\n  }) => ({\n    posts: posts.posts,\n    error: posts.error,\n    loading: loading['posts/LIST_POSTS'],\n    user: user.user\n  }));\n  useEffect(() => {\n    const {\n      tag,\n      username,\n      page\n    } = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    dispatch(listPosts({\n      tag,\n      username,\n      page\n    }));\n  }, [dispatch, location.search]);\n  return /*#__PURE__*/_jsxDEV(PostList, {\n    loading: loading,\n    error: error,\n    posts: posts,\n    showWriteButton: user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostListContainer, \"dkcIZhoIDoAuP2q6RhQaDpzcvjI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostListContainer;\nexport default _c2 = withRouter(PostListContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostListContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/containers/posts/PostListContainer.js"],"names":["React","useEffect","qs","withRouter","useDispatch","useSelector","PostList","listPosts","PostListContainer","location","dispatch","posts","error","loading","user","tag","username","page","parse","search","ignoreQueryPrefix"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC1C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAkCT,WAAW,CACjD,CAAC;AAAEM,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAD,MAA+B;AAC7BH,IAAAA,KAAK,EAAEA,KAAK,CAACA,KADgB;AAE7BC,IAAAA,KAAK,EAAED,KAAK,CAACC,KAFgB;AAG7BC,IAAAA,OAAO,EAAEA,OAAO,CAAC,kBAAD,CAHa;AAI7BC,IAAAA,IAAI,EAAEA,IAAI,CAACA;AAJkB,GAA/B,CADiD,CAAnD;AASAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEc,MAAAA,GAAF;AAAOC,MAAAA,QAAP;AAAiBC,MAAAA;AAAjB,QAA0Bf,EAAE,CAACgB,KAAH,CAAST,QAAQ,CAACU,MAAlB,EAA0B;AACxDC,MAAAA,iBAAiB,EAAE;AADqC,KAA1B,CAAhC;AAGAV,IAAAA,QAAQ,CAACH,SAAS,CAAC;AAAEQ,MAAAA,GAAF;AAAOC,MAAAA,QAAP;AAAiBC,MAAAA;AAAjB,KAAD,CAAV,CAAR;AACD,GALQ,EAKN,CAACP,QAAD,EAAWD,QAAQ,CAACU,MAApB,CALM,CAAT;AAOA,sBACE,QAAC,QAAD;AACE,IAAA,OAAO,EAAEN,OADX;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,KAAK,EAAED,KAHT;AAIE,IAAA,eAAe,EAAEG;AAJnB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1BD;;GAAMN,iB;UACaJ,W,EACuBC,W;;;KAFpCG,iB;AA4BN,qBAAeL,UAAU,CAACK,iBAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport qs from 'qs';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostList from '../../components/posts/PostList';\nimport { listPosts } from '../../modules/posts';\n\nconst PostListContainer = ({ location }) => {\n  const dispatch = useDispatch();\n  const { posts, error, loading, user } = useSelector(\n    ({ posts, loading, user }) => ({\n      posts: posts.posts,\n      error: posts.error,\n      loading: loading['posts/LIST_POSTS'],\n      user: user.user,\n    }),\n  );\n\n  useEffect(() => {\n    const { tag, username, page } = qs.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n    dispatch(listPosts({ tag, username, page }));\n  }, [dispatch, location.search]);\n\n  return (\n    <PostList\n      loading={loading}\n      error={error}\n      posts={posts}\n      showWriteButton={user}\n    />\n  );\n};\n\nexport default withRouter(PostListContainer);\n"]},"metadata":{},"sourceType":"module"}