{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/post/PostViewer.js\";\nimport React from './react';\nimport styled from './styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nconst PostViewerBlock = styled(Responsive)`\n  margin-top: 4rem;\n`;\n_c = PostViewerBlock;\nconst PostHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 3rem;\n  margin-bottom: 3rem;\n  h1 {\n    font-size: 3rem;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\n_c2 = PostHead;\nconst SubInfo = styled.div`\n  margin-top: 1rem;\n  color: ${palette.gray[6]};\n\n  span + span:before {\n    color: ${palette.gray[5]};\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    content: '\\\\B7';\n  }\n`;\n_c3 = SubInfo;\nconst Tags = styled.div`\n  margin-top: 0.5rem;\n  .tag {\n    display: inline-block;\n    color: ${palette.cyan[7]};\n    text-decoration: none;\n    margin-right: 0.5rem;\n    &:hover {\n      color: ${palette.cyan[6]};\n    }\n  }\n`;\n_c4 = Tags;\nconst PostContent = styled.div`\n  font-size: 1.3125rem;\n  color: ${palette.gray[8]};\n`;\n_c5 = PostContent;\n\nconst PostViewer = ({\n  post,\n  error,\n  loading\n}) => {\n  // // 에러 발생 시\n  // if (error) {\n  //   if (error.response && error.response.status === 404) {\n  //     return <PostViewerBlock>존재하지 않는 포스트입니다.</PostViewerBlock>;\n  //   }\n  //   return <PostViewerBlock>오류 발생!</PostViewerBlock>;\n  // }\n  // // 로딩 중이거나 아직 포스트 데이터가 없을 때\n  // if (loading || !post) {\n  //   return null;\n  // }\n  // const { title, body, user, publishedDate, tags } = post;\n  return /*#__PURE__*/_jsxDEV(PostViewerBlock, {\n    children: [/*#__PURE__*/_jsxDEV(PostHead, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(publishedDate).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tags, {\n        children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag\",\n          children: [\"#\", tag]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n      dangerouslySetInnerHTML: {\n        __html: body\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = PostViewer;\nexport default PostViewer;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PostViewerBlock\");\n$RefreshReg$(_c2, \"PostHead\");\n$RefreshReg$(_c3, \"SubInfo\");\n$RefreshReg$(_c4, \"Tags\");\n$RefreshReg$(_c5, \"PostContent\");\n$RefreshReg$(_c6, \"PostViewer\");","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/post/PostViewer.js"],"names":["React","styled","palette","Responsive","PostViewerBlock","PostHead","div","gray","SubInfo","Tags","cyan","PostContent","PostViewer","post","error","loading","title","user","username","Date","publishedDate","toLocaleDateString","tags","map","tag","__html","body"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,MAAMC,eAAe,GAAGH,MAAM,CAACE,UAAD,CAAa;AAC3C;AACA,CAFA;KAAMC,e;AAIN,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAI;AAC5B,6BAA6BJ,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMF,Q;AAUN,MAAMG,OAAO,GAAGP,MAAM,CAACK,GAAI;AAC3B;AACA,WAAWJ,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;AAC3B;AACA;AACA,aAAaL,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;AAC7B;AACA;AACA;AACA;AACA,CAVA;MAAMC,O;AAYN,MAAMC,IAAI,GAAGR,MAAM,CAACK,GAAI;AACxB;AACA;AACA;AACA,aAAaJ,OAAO,CAACQ,IAAR,CAAa,CAAb,CAAgB;AAC7B;AACA;AACA;AACA,eAAeR,OAAO,CAACQ,IAAR,CAAa,CAAb,CAAgB;AAC/B;AACA;AACA,CAXA;MAAMD,I;AAaN,MAAME,WAAW,GAAGV,MAAM,CAACK,GAAI;AAC/B;AACA,WAAWJ,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;AAC3B,CAHA;MAAMI,W;;AAKN,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,QAAD;AAAA,8BACE;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA,gCACE;AAAA,iCACE;AAAA,sBAAIC,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBAAO,IAAIC,IAAJ,CAASC,aAAT,EAAwBC,kBAAxB;AAAP;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,IAAD;AAAA,kBACGC,IAAI,CAACC,GAAL,CAAUC,GAAD,iBACR;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,0BAAuBA,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,WAAD;AAAa,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEC;AAAV;AAAtC;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAlCD;;MAAMd,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React from './react';\nimport styled from './styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\n\nconst PostViewerBlock = styled(Responsive)`\n  margin-top: 4rem;\n`;\n\nconst PostHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 3rem;\n  margin-bottom: 3rem;\n  h1 {\n    font-size: 3rem;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\nconst SubInfo = styled.div`\n  margin-top: 1rem;\n  color: ${palette.gray[6]};\n\n  span + span:before {\n    color: ${palette.gray[5]};\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    content: '\\\\B7';\n  }\n`;\n\nconst Tags = styled.div`\n  margin-top: 0.5rem;\n  .tag {\n    display: inline-block;\n    color: ${palette.cyan[7]};\n    text-decoration: none;\n    margin-right: 0.5rem;\n    &:hover {\n      color: ${palette.cyan[6]};\n    }\n  }\n`;\n\nconst PostContent = styled.div`\n  font-size: 1.3125rem;\n  color: ${palette.gray[8]};\n`;\n\nconst PostViewer = ({ post, error, loading }) => {\n  // // 에러 발생 시\n  // if (error) {\n  //   if (error.response && error.response.status === 404) {\n  //     return <PostViewerBlock>존재하지 않는 포스트입니다.</PostViewerBlock>;\n  //   }\n  //   return <PostViewerBlock>오류 발생!</PostViewerBlock>;\n  // }\n\n  // // 로딩 중이거나 아직 포스트 데이터가 없을 때\n  // if (loading || !post) {\n  //   return null;\n  // }\n\n  // const { title, body, user, publishedDate, tags } = post;\n  return (\n    <PostViewerBlock>\n      <PostHead>\n        <h1>{title}</h1>\n        <SubInfo>\n          <span>\n            <b>{user.username}</b>\n          </span>\n          <span>{new Date(publishedDate).toLocaleDateString()}</span>\n        </SubInfo>\n        <Tags>\n          {tags.map((tag) => (\n            <div className=\"tag\">#{tag}</div>\n          ))}\n        </Tags>\n      </PostHead>\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\n    </PostViewerBlock>\n  );\n};\n\nexport default PostViewer;\n"]},"metadata":{},"sourceType":"module"}