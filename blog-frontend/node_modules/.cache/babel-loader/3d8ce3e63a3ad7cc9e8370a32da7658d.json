{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/containers/write/WriteActionButtonsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { writePost, updatePost } from '../../modules/write';\n\nconst WriteActionButtonsContainer = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    title,\n    body,\n    tags,\n    post,\n    postError,\n    originalPostId\n  } = useSelector(({\n    write\n  }) => ({\n    title: write.title,\n    body: write.body,\n    tags: write.tags,\n    post: write.post,\n    postError: write.postError,\n    originalPostId: write.originalPostId\n  })); // 포스트 등록\n\n  const onPublish = () => {\n    dispatch(writePost({\n      title,\n      body,\n      tags\n    }));\n  }; // 취소\n\n\n  const onCancel = () => {\n    history.goBack();\n  }; // 성공 혹은 실패 시 할 작업\n\n\n  useEffect(() => {\n    if (post) {\n      const {\n        _id,\n        user\n      } = post;\n      history.push(`/@${user.username}/${_id}`);\n    }\n\n    if (postError) {\n      console.log(postError);\n    }\n  }, [history, post, postError]);\n  return /*#__PURE__*/_jsxDEV(WriteActionButtons, {\n    onPublish: onPublish,\n    onCancel: onCancel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n\n_s(WriteActionButtonsContainer, \"6i2Oef7RSuRZl0tkxpNmDRqcT54=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = WriteActionButtonsContainer;\nexport default _c2 = withRouter(WriteActionButtonsContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WriteActionButtonsContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/containers/write/WriteActionButtonsContainer.js"],"names":["React","useEffect","WriteActionButtons","useSelector","useDispatch","withRouter","writePost","updatePost","WriteActionButtonsContainer","history","dispatch","title","body","tags","post","postError","originalPostId","write","onPublish","onCancel","goBack","_id","user","push","username","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,qBAAtC;;AAEA,MAAMC,2BAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACnD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA,SAA3B;AAAsCC,IAAAA;AAAtC,MAAyDb,WAAW,CACxE,CAAC;AAAEc,IAAAA;AAAF,GAAD,MAAgB;AACdN,IAAAA,KAAK,EAAEM,KAAK,CAACN,KADC;AAEdC,IAAAA,IAAI,EAAEK,KAAK,CAACL,IAFE;AAGdC,IAAAA,IAAI,EAAEI,KAAK,CAACJ,IAHE;AAIdC,IAAAA,IAAI,EAAEG,KAAK,CAACH,IAJE;AAKdC,IAAAA,SAAS,EAAEE,KAAK,CAACF,SALH;AAMdC,IAAAA,cAAc,EAAEC,KAAK,CAACD;AANR,GAAhB,CADwE,CAA1E,CAFmD,CAanD;;AACA,QAAME,SAAS,GAAG,MAAM;AACtBR,IAAAA,QAAQ,CACNJ,SAAS,CAAC;AACRK,MAAAA,KADQ;AAERC,MAAAA,IAFQ;AAGRC,MAAAA;AAHQ,KAAD,CADH,CAAR;AAOD,GARD,CAdmD,CAwBnD;;;AACA,QAAMM,QAAQ,GAAG,MAAM;AACrBV,IAAAA,OAAO,CAACW,MAAR;AACD,GAFD,CAzBmD,CA6BnD;;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,IAAJ,EAAU;AACR,YAAM;AAAEO,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAgBR,IAAtB;AACAL,MAAAA,OAAO,CAACc,IAAR,CAAc,KAAID,IAAI,CAACE,QAAS,IAAGH,GAAI,EAAvC;AACD;;AACD,QAAIN,SAAJ,EAAe;AACbU,MAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACD;AACF,GARQ,EAQN,CAACN,OAAD,EAAUK,IAAV,EAAgBC,SAAhB,CARM,CAAT;AASA,sBAAO,QAAC,kBAAD;AAAoB,IAAA,SAAS,EAAEG,SAA/B;AAA0C,IAAA,QAAQ,EAAEC;AAApD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxCD;;GAAMX,2B;UACaJ,W,EAC8CD,W;;;KAF3DK,2B;AA0CN,qBAAeH,UAAU,CAACG,2BAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { writePost, updatePost } from '../../modules/write';\n\nconst WriteActionButtonsContainer = ({ history }) => {\n  const dispatch = useDispatch();\n  const { title, body, tags, post, postError, originalPostId } = useSelector(\n    ({ write }) => ({\n      title: write.title,\n      body: write.body,\n      tags: write.tags,\n      post: write.post,\n      postError: write.postError,\n      originalPostId: write.originalPostId,\n    }),\n  );\n\n  // 포스트 등록\n  const onPublish = () => {\n    dispatch(\n      writePost({\n        title,\n        body,\n        tags,\n      }),\n    );\n  };\n\n  // 취소\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  // 성공 혹은 실패 시 할 작업\n  useEffect(() => {\n    if (post) {\n      const { _id, user } = post;\n      history.push(`/@${user.username}/${_id}`);\n    }\n    if (postError) {\n      console.log(postError);\n    }\n  }, [history, post, postError]);\n  return <WriteActionButtons onPublish={onPublish} onCancel={onCancel} />;\n};\n\nexport default withRouter(WriteActionButtonsContainer);\n"]},"metadata":{},"sourceType":"module"}