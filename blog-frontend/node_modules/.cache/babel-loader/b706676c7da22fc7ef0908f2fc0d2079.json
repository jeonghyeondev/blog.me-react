{"ast":null,"code":"import _defineProperty from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _handleActions;var _marked=/*#__PURE__*/_regeneratorRuntime.mark(postsSaga);import{createAction,handleActions}from'redux-actions';import createRequestSaga,{createRequestActionTypes}from'../lib/createRequestSaga';import*as postsAPI from'../lib/api/posts';import{takeLatest}from'redux-saga/effects';var _createRequestActionT=createRequestActionTypes('posts/LIST_POSTS'),_createRequestActionT2=_slicedToArray(_createRequestActionT,3),LIST_POSTS=_createRequestActionT2[0],LIST_POSTS_SUCCESS=_createRequestActionT2[1],LIST_POSTS_FAILURE=_createRequestActionT2[2];export var listPosts=createAction(LIST_POSTS,function(_ref){var tag=_ref.tag,username=_ref.username,page=_ref.page;return{tag:tag,username:username,page:page};});var listPostsSaga=createRequestSaga(LIST_POSTS,postsAPI.listPosts);export function postsSaga(){return _regeneratorRuntime.wrap(function postsSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(LIST_POSTS,listPostsSaga);case 2:case\"end\":return _context.stop();}}},_marked);}var initialState={posts:null,error:null,lastPage:1};var posts=handleActions((_handleActions={},_defineProperty(_handleActions,LIST_POSTS_SUCCESS,function(state,_ref2){var posts=_ref2.payload,response=_ref2.meta;return _objectSpread(_objectSpread({},state),{},{posts:posts,lastPage:parseInt(response.headers['last-page'],10)// 문자열을 숫자로 변환\n});}),_defineProperty(_handleActions,LIST_POSTS_FAILURE,function(state,_ref3){var error=_ref3.payload;return _objectSpread(_objectSpread({},state),{},{error:error});}),_handleActions),initialState);export default posts;","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/modules/posts.js"],"names":["postsSaga","createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","tag","username","page","listPostsSaga","initialState","posts","error","lastPage","state","payload","response","meta","parseInt","headers"],"mappings":"iwBAmBiBA,S,EAnBjB,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,eAA5C,CACA,MAAOC,CAAAA,iBAAP,EACEC,wBADF,KAEO,0BAFP,CAGA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,kBAA1B,CACA,OAASC,UAAT,KAA2B,oBAA3B,C,0BAMIF,wBAAwB,CAAC,kBAAD,C,gEAH1BG,U,2BACAC,kB,2BACAC,kB,2BAGF,MAAO,IAAMC,CAAAA,SAAS,CAAGT,YAAY,CACnCM,UADmC,CAEnC,kBAAGI,CAAAA,GAAH,MAAGA,GAAH,CAAQC,QAAR,MAAQA,QAAR,CAAkBC,IAAlB,MAAkBA,IAAlB,OAA8B,CAAEF,GAAG,CAAHA,GAAF,CAAOC,QAAQ,CAARA,QAAP,CAAiBC,IAAI,CAAJA,IAAjB,CAA9B,EAFmC,CAA9B,CAKP,GAAMC,CAAAA,aAAa,CAAGX,iBAAiB,CAACI,UAAD,CAAaF,QAAQ,CAACK,SAAtB,CAAvC,CACA,MAAO,SAAUV,CAAAA,SAAV,qIACL,MAAMM,CAAAA,UAAU,CAACC,UAAD,CAAaO,aAAb,CAAhB,CADK,sDAIP,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,IADY,CAEnBC,KAAK,CAAE,IAFY,CAGnBC,QAAQ,CAAE,CAHS,CAArB,CAMA,GAAMF,CAAAA,KAAK,CAAGd,aAAa,mDAEtBM,kBAFsB,CAED,SAACW,KAAD,WAAmBH,CAAAA,KAAnB,OAAUI,OAAV,CAAgCC,QAAhC,OAA0BC,IAA1B,uCACjBH,KADiB,MAEpBH,KAAK,CAALA,KAFoB,CAGpBE,QAAQ,CAAEK,QAAQ,CAACF,QAAQ,CAACG,OAAT,CAAiB,WAAjB,CAAD,CAAgC,EAAhC,CAAqC;AAHnC,IAFC,iCAOtBf,kBAPsB,CAOD,SAACU,KAAD,WAAmBF,CAAAA,KAAnB,OAAUG,OAAV,uCACjBD,KADiB,MAEpBF,KAAK,CAALA,KAFoB,IAPC,kBAYzBF,YAZyB,CAA3B,CAeA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\n\nconst [\n  LIST_POSTS,\n  LIST_POSTS_SUCCESS,\n  LIST_POSTS_FAILURE,\n] = createRequestActionTypes('posts/LIST_POSTS');\n\nexport const listPosts = createAction(\n  LIST_POSTS,\n  ({ tag, username, page }) => ({ tag, username, page }),\n);\n\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n}\n\nconst initialState = {\n  posts: null,\n  error: null,\n  lastPage: 1,\n};\n\nconst posts = handleActions(\n  {\n    [LIST_POSTS_SUCCESS]: (state, { payload: posts, meta: response }) => ({\n      ...state,\n      posts,\n      lastPage: parseInt(response.headers['last-page'], 10), // 문자열을 숫자로 변환\n    }),\n    [LIST_POSTS_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      error,\n    }),\n  },\n  initialState,\n);\n\nexport default posts;\n"]},"metadata":{},"sourceType":"module"}