{"ast":null,"code":"import _slicedToArray from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{withRouter}from'react-router-dom';import{changeField,initializeForm,login}from'../../modules/auth';import AuthForm from'../../components/auth/AuthForm';import{check}from'../../modules/user';var LoginForm=function LoginForm(_ref){var history=_ref.history;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var dispatch=useDispatch();var _useSelector=useSelector(function(_ref2){var auth=_ref2.auth,user=_ref2.user;return{form:auth.login,auth:auth.auth,authError:auth.authError,user:user.user};}),form=_useSelector.form,auth=_useSelector.auth,authError=_useSelector.authError,user=_useSelector.user;// 인풋 변경 핸들러\nvar onChange=function onChange(e){var _e$target=e.target,value=_e$target.value,name=_e$target.name;dispatch(changeField({form:'login',key:name,value:value}));};// 폼 등록 이벤트 핸들러\nvar onSubmit=function onSubmit(e){e.preventDefault();var username=form.username,password=form.password;dispatch(login({username:username,password:password}));};// 컴포넌트가 처음 렌덩링될 때 form 초기화함\nuseEffect(function(){dispatch(initializeForm('login'));},[dispatch]);useEffect(function(){if(authError){console.log('오류 발생');console.log(authError);setError('로그인 실패');return;}if(auth){console.log('로그인 성공');dispatch(check());}},[auth,authError,dispatch]);useEffect(function(){if(user){history.push('/');try{localStorage.setItem('user',JSON.stringify(user));}catch(e){console.log('localStorage is not working');}}},[history,user]);return/*#__PURE__*/_jsx(AuthForm,{type:\"login\",form:form,onChange:onChange,onSubmit:onSubmit,error:error});};export default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/containers/auth/LoginForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","withRouter","changeField","initializeForm","login","AuthForm","check","LoginForm","history","error","setError","dispatch","auth","user","form","authError","onChange","e","target","value","name","key","onSubmit","preventDefault","username","password","console","log","push","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\n\nconst LoginForm = ({ history }) => {\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\n    form: auth.login,\n    auth: auth.auth,\n    authError: auth.authError,\n    user: user.user,\n  }));\n\n  // 인풋 변경 핸들러\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    dispatch(\n      changeField({\n        form: 'login',\n        key: name,\n        value,\n      }),\n    );\n  };\n\n  // 폼 등록 이벤트 핸들러\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { username, password } = form;\n    dispatch(login({ username, password }));\n  };\n\n  // 컴포넌트가 처음 렌덩링될 때 form 초기화함\n  useEffect(() => {\n    dispatch(initializeForm('login'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (authError) {\n      console.log('오류 발생');\n      console.log(authError);\n      setError('로그인 실패');\n      return;\n    }\n    if (auth) {\n      console.log('로그인 성공');\n      dispatch(check());\n    }\n  }, [auth, authError, dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n      } catch (e) {\n        console.log('localStorage is not working');\n      }\n    }\n  }, [history, user]);\n\n  return (\n    <AuthForm\n      type=\"login\"\n      form={form}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      error={error}\n    ></AuthForm>\n  );\n};\n\nexport default withRouter(LoginForm);\n"]},"metadata":{},"sourceType":"module"}