{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/write/TagBox.js\";\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nconst TagBoxBlock = styled.div`\n  width: 100%;\n  border-top: 1px solid ${palette.gray[2]};\n  padding-top: 2rem;\n  h4 {\n    color: ${palette.gray[8]};\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n`;\n_c = TagBoxBlock;\nconst TagForm = styled.div`\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  width: 256px;\n  border: 1px solid ${palette.gray[9]};\n  input,\n  button {\n    outline: none;\n    border: none;\n    font-size: 1rem;\n  }\n  input {\n    padding: 0.5rem;\n    flex: 1;\n    min-width: 0;\n  }\n  button {\n    cursor: pointer;\n    padding-right: 1rem;\n    padding-left: 1rem;\n    border: none;\n    background: ${palette.gray[8]};\n    color: #fff;\n    font-weight: bold;\n    &:hover {\n      background: ${palette.gray[6]};\n    }\n  }\n`;\n_c2 = TagForm;\nconst Tag = styled.div`\n  margin-right: 0.5rem;\n  color: ${palette.gray[6]};\n  cursor: pointer;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n_c3 = Tag;\nconst TagListBlock = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n`; // React.memo를 사용하여 tag값이 바뀔 때만 리렌더링되도록 처리\n\n_c4 = TagListBlock;\nconst TagItem = /*#__PURE__*/React.memo(_c5 = ({\n  tag,\n  onRemove\n}) => /*#__PURE__*/_jsxDEV(Tag, {\n  onClick: () => onRemove(tag),\n  children: [\"#\", tag]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this)); // React.memo를 사용하여 tags값이 바뀔 때만 리렌더링되도록 처리\n\n_c6 = TagItem;\nconst TagList = /*#__PURE__*/React.memo(_c7 = ({\n  tags,\n  onRemove\n}) => /*#__PURE__*/_jsxDEV(TagListBlock, {\n  children: tags.map(tag => /*#__PURE__*/_jsxDEV(TagItem, {\n    tag: tag,\n    onRemove: onRemove\n  }, tag, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this));\n_c8 = TagList;\n\nconst TagBox = () => {\n  return /*#__PURE__*/_jsxDEV(TagBoxBlock, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uD0DC\\uADF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagList, {\n      tags: ['태그1', '태그2', '태그3']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_c9 = TagBox;\nexport default TagBox;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"TagBoxBlock\");\n$RefreshReg$(_c2, \"TagForm\");\n$RefreshReg$(_c3, \"Tag\");\n$RefreshReg$(_c4, \"TagListBlock\");\n$RefreshReg$(_c5, \"TagItem$React.memo\");\n$RefreshReg$(_c6, \"TagItem\");\n$RefreshReg$(_c7, \"TagList$React.memo\");\n$RefreshReg$(_c8, \"TagList\");\n$RefreshReg$(_c9, \"TagBox\");","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/write/TagBox.js"],"names":["React","useState","useCallback","styled","palette","TagBoxBlock","div","gray","TagForm","Tag","TagListBlock","TagItem","memo","tag","onRemove","TagList","tags","map","TagBox"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAI;AAC/B;AACA,0BAA0BF,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AAC1C;AACA;AACA,aAAaH,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AAC7B;AACA;AACA;AACA,CATA;KAAMF,W;AAWN,MAAMG,OAAO,GAAGL,MAAM,CAACG,GAAI;AAC3B;AACA;AACA;AACA;AACA,sBAAsBF,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBH,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AAClC;AACA;AACA;AACA,oBAAoBH,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AACpC;AACA;AACA,CA7BA;MAAMC,O;AA+BN,MAAMC,GAAG,GAAGN,MAAM,CAACG,GAAI;AACvB;AACA,WAAWF,OAAO,CAACG,IAAR,CAAa,CAAb,CAAgB;AAC3B;AACA;AACA;AACA;AACA,CAPA;MAAME,G;AAQN,MAAMC,YAAY,GAAGP,MAAM,CAACG,GAAI;AAChC;AACA;AACA,CAHA,C,CAKA;;MALMI,Y;AAMN,MAAMC,OAAO,gBAAGX,KAAK,CAACY,IAAN,OAAW,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,kBACzB,QAAC,GAAD;AAAK,EAAA,OAAO,EAAE,MAAMA,QAAQ,CAACD,GAAD,CAA5B;AAAA,kBAAqCA,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA,QADc,CAAhB,C,CAIA;;MAJMF,O;AAKN,MAAMI,OAAO,gBAAGf,KAAK,CAACY,IAAN,OAAW,CAAC;AAAEI,EAAAA,IAAF;AAAQF,EAAAA;AAAR,CAAD,kBACzB,QAAC,YAAD;AAAA,YACGE,IAAI,CAACC,GAAL,CAAUJ,GAAD,iBACR,QAAC,OAAD;AAAmB,IAAA,GAAG,EAAEA,GAAxB;AAA6B,IAAA,QAAQ,EAAEC;AAAvC,KAAcD,GAAd;AAAA;AAAA;AAAA;AAAA,UADD;AADH;AAAA;AAAA;AAAA;AAAA,QADc,CAAhB;MAAME,O;;AAQN,MAAMG,MAAM,GAAG,MAAM;AACnB,sBACE,QAAC,WAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA,8BACE;AAAO,QAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf;AAAf;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;MAAMA,M;AAaN,eAAeA,MAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst TagBoxBlock = styled.div`\n  width: 100%;\n  border-top: 1px solid ${palette.gray[2]};\n  padding-top: 2rem;\n  h4 {\n    color: ${palette.gray[8]};\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst TagForm = styled.div`\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  width: 256px;\n  border: 1px solid ${palette.gray[9]};\n  input,\n  button {\n    outline: none;\n    border: none;\n    font-size: 1rem;\n  }\n  input {\n    padding: 0.5rem;\n    flex: 1;\n    min-width: 0;\n  }\n  button {\n    cursor: pointer;\n    padding-right: 1rem;\n    padding-left: 1rem;\n    border: none;\n    background: ${palette.gray[8]};\n    color: #fff;\n    font-weight: bold;\n    &:hover {\n      background: ${palette.gray[6]};\n    }\n  }\n`;\n\nconst Tag = styled.div`\n  margin-right: 0.5rem;\n  color: ${palette.gray[6]};\n  cursor: pointer;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\nconst TagListBlock = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n`;\n\n// React.memo를 사용하여 tag값이 바뀔 때만 리렌더링되도록 처리\nconst TagItem = React.memo(({ tag, onRemove }) => (\n  <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\n));\n\n// React.memo를 사용하여 tags값이 바뀔 때만 리렌더링되도록 처리\nconst TagList = React.memo(({ tags, onRemove }) => (\n  <TagListBlock>\n    {tags.map((tag) => (\n      <TagItem key={tag} tag={tag} onRemove={onRemove} />\n    ))}\n  </TagListBlock>\n));\n\nconst TagBox = () => {\n  return (\n    <TagBoxBlock>\n      <h4>태그</h4>\n      <TagForm>\n        <input placeholder=\"태그를 입력하세요\" />\n        <button type=\"submit\">추가</button>\n      </TagForm>\n      <TagList tags={['태그1', '태그2', '태그3']} />\n    </TagBoxBlock>\n  );\n};\n\nexport default TagBox;\n"]},"metadata":{},"sourceType":"module"}