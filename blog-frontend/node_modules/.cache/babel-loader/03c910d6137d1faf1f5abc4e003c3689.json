{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/write/TagBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nconst TagBoxBlock = styled.div`\n  width: 100%;\n  border-top: 1px solid ${palette.gray[2]};\n  padding-top: 2rem;\n h4 {\n    color: ${palette.gray[8]}\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n`;\n_c = TagBoxBlock;\nconst TagForm = styled.form`\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  width: 256px;\n  border: 1px solid ${palette.gray[9]}; /* 스타일 초기화 */\n  input,\n  button {\n    outline: none;\n    border: none;\n    font-size: 1rem;\n  }\n  input {\n    padding: 0.5rem;\n    flex: 1;\n  }\n  button {\n    cursor: pointer;\n    padding-right: 1rem;\n    padding-left: 1rem;\n    border: none;\n    background: ${palette.gray[8]};\n    color: white;\n    font-weight: bold;\n    &:hover {\n      background: ${palette.gray[6]};\n    }\n  }\n`;\n_c2 = TagForm;\nconst Tag = styled.div`\n  margin-right: 0.5rem;\n  color: ${palette.gray[6]};\n  cursor: pointer;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n_c3 = Tag;\nconst TagListBlock = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n`; // React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\n\n_c4 = TagListBlock;\nconst TagItem = /*#__PURE__*/React.memo(_c5 = ({\n  tag,\n  onRemove\n}) => /*#__PURE__*/_jsxDEV(Tag, {\n  onClick: () => onRemove(tag),\n  children: [\"#\", tag]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this)); // React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\n\n_c6 = TagItem;\nconst TagList = /*#__PURE__*/React.memo(_c7 = ({\n  tags,\n  onRemove\n}) => /*#__PURE__*/_jsxDEV(TagListBlock, {\n  children: tags.map(tag => /*#__PURE__*/_jsxDEV(TagItem, {\n    tag: tag,\n    onRemove: onRemove\n  }, tag, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this));\n_c8 = TagList;\n\nconst TagBox = ({\n  tags,\n  onChangeTags\n}) => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [localTags, setLocalTags] = useState([]);\n  const insertTag = useCallback(tag => {\n    if (!tag) return; // 공백이라면 추가하지 않음\n\n    if (localTags.includes(tag)) return; // 이미 존재한다면 추가하지 않음\n\n    const nextTags = [...localTags, tag];\n    setLocalTags(nextTags);\n    onChangeTags(nextTags);\n  }, [localTags, onChangeTags]);\n  const onRemove = useCallback(tag => {\n    const nextTags = localTags.filter(t => t !== tag);\n    setLocalTags(nextTags);\n    onChangeTags(nextTags);\n  }, [localTags, onChangeTags]);\n  const onChange = useCallback(e => {\n    setInput(e.target.value);\n  }, []);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n    insertTag(input.trim()); // 앞뒤 공백을 없앤 후 등록\n\n    setInput(''); // input 초기화\n  }, [input, insertTag]); // tags 값이 바뀔 때\n\n  useEffect(() => {\n    setLocalTags(tags);\n  }, [tags]);\n  return /*#__PURE__*/_jsxDEV(TagBoxBlock, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\uD0DC\\uADF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagForm, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"\\uD0DC\\uADF8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: input,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TagList, {\n      tags: localTags,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TagBox, \"dVq9ZPZm44m7K2S9GiIBfXV43Yk=\");\n\n_c9 = TagBox;\nexport default TagBox;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"TagBoxBlock\");\n$RefreshReg$(_c2, \"TagForm\");\n$RefreshReg$(_c3, \"Tag\");\n$RefreshReg$(_c4, \"TagListBlock\");\n$RefreshReg$(_c5, \"TagItem$React.memo\");\n$RefreshReg$(_c6, \"TagItem\");\n$RefreshReg$(_c7, \"TagList$React.memo\");\n$RefreshReg$(_c8, \"TagList\");\n$RefreshReg$(_c9, \"TagBox\");","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/write/TagBox.js"],"names":["React","useState","useCallback","useEffect","styled","palette","TagBoxBlock","div","gray","TagForm","form","Tag","TagListBlock","TagItem","memo","tag","onRemove","TagList","tags","map","TagBox","onChangeTags","input","setInput","localTags","setLocalTags","insertTag","includes","nextTags","filter","t","onChange","e","target","value","onSubmit","preventDefault","trim"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\n\nconst TagBoxBlock = styled.div`\n  width: 100%;\n  border-top: 1px solid ${palette.gray[2]};\n  padding-top: 2rem;\n h4 {\n    color: ${palette.gray[8]}\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst TagForm = styled.form`\n  border-radius: 4px;\n  overflow: hidden;\n  display: flex;\n  width: 256px;\n  border: 1px solid ${palette.gray[9]}; /* 스타일 초기화 */\n  input,\n  button {\n    outline: none;\n    border: none;\n    font-size: 1rem;\n  }\n  input {\n    padding: 0.5rem;\n    flex: 1;\n  }\n  button {\n    cursor: pointer;\n    padding-right: 1rem;\n    padding-left: 1rem;\n    border: none;\n    background: ${palette.gray[8]};\n    color: white;\n    font-weight: bold;\n    &:hover {\n      background: ${palette.gray[6]};\n    }\n  }\n`;\n\nconst Tag = styled.div`\n  margin-right: 0.5rem;\n  color: ${palette.gray[6]};\n  cursor: pointer;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nconst TagListBlock = styled.div`\n  display: flex;\n  margin-top: 0.5rem;\n`;\n\n// React.memo를 사용하여 tag 값이 바뀔 때만 리렌더링되도록 처리\nconst TagItem = React.memo(({ tag, onRemove }) => (\n  <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\n));\n\n// React.memo를 사용하여 tags 값이 바뀔 때만 리렌더링되도록 처리\nconst TagList = React.memo(({ tags, onRemove }) => (\n  <TagListBlock>\n    {tags.map((tag) => (\n      <TagItem key={tag} tag={tag} onRemove={onRemove} />\n    ))}\n  </TagListBlock>\n));\n\nconst TagBox = ({ tags, onChangeTags }) => {\n  const [input, setInput] = useState('');\n  const [localTags, setLocalTags] = useState([]);\n  const insertTag = useCallback(\n    (tag) => {\n      if (!tag) return; // 공백이라면 추가하지 않음\n      if (localTags.includes(tag)) return; // 이미 존재한다면 추가하지 않음\n      const nextTags = [...localTags, tag];\n      setLocalTags(nextTags);\n      onChangeTags(nextTags);\n    },\n    [localTags, onChangeTags],\n  );\n\n  const onRemove = useCallback(\n    (tag) => {\n      const nextTags = localTags.filter((t) => t !== tag);\n      setLocalTags(nextTags);\n      onChangeTags(nextTags);\n    },\n    [localTags, onChangeTags],\n  );\n\n  const onChange = useCallback((e) => {\n    setInput(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      insertTag(input.trim()); // 앞뒤 공백을 없앤 후 등록\n      setInput(''); // input 초기화\n    },\n    [input, insertTag],\n  );\n\n  // tags 값이 바뀔 때\n  useEffect(() => {\n    setLocalTags(tags);\n  }, [tags]);\n\n  return (\n    <TagBoxBlock>\n      <h4>태그</h4>\n      <TagForm onSubmit={onSubmit}>\n        <input\n          placeholder=\"태그를 입력하세요\"\n          value={input}\n          onChange={onChange}\n        />\n        <button type=\"submit\">추가</button>\n      </TagForm>\n      <TagList tags={localTags} onRemove={onRemove} />\n    </TagBoxBlock>\n  );\n};\n\nexport default TagBox;\n"]},"metadata":{},"sourceType":"module"}