{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/posts/PostList.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport palette from '../../lib/styles/palette';\nimport Button from '../common/Button';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport { Link } from 'react-router-dom';\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n_c = PostListBlock;\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 3rem;\n`;\n_c2 = WritePostButtonWrapper;\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n_c3 = PostItemBlock;\n\nconst PostItem = ({\n  post\n}) => {\n  const {\n    publishedDate,\n    username,\n    tags,\n    title,\n    body,\n    _id\n  } = post;\n  return /*#__PURE__*/_jsxDEV(PostItemBlock, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/@${username}/${_id}`,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubInfo, {\n      username: username,\n      publishedDate: new Date(publishedDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tags, {\n      tags: tags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = PostItem;\n\nconst PostList = ({\n  posts,\n  error,\n  showWriteButton,\n  loading\n}) => {\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PostListBlock, {\n      children: \"Error Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PostListBlock, {\n    children: [/*#__PURE__*/_jsxDEV(WritePostButtonWrapper, {\n      children: showWriteButton && /*#__PURE__*/_jsxDEV(Button, {\n        cyan: true,\n        to: \"/write\",\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), !loading && posts && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = PostList;\nexport default PostList;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PostListBlock\");\n$RefreshReg$(_c2, \"WritePostButtonWrapper\");\n$RefreshReg$(_c3, \"PostItemBlock\");\n$RefreshReg$(_c4, \"PostItem\");\n$RefreshReg$(_c5, \"PostList\");","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/components/posts/PostList.js"],"names":["React","styled","Responsive","palette","Button","SubInfo","Tags","Link","PostListBlock","WritePostButtonWrapper","div","PostItemBlock","gray","PostItem","post","publishedDate","username","tags","title","body","_id","Date","PostList","posts","error","showWriteButton","loading","map"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,aAAa,GAAGP,MAAM,CAACC,UAAD,CAAa;AACzC;AACA,CAFA;KAAMM,a;AAGN,MAAMC,sBAAsB,GAAGR,MAAM,CAACS,GAAI;AAC1C;AACA;AACA;AACA,CAJA;MAAMD,sB;AAKN,MAAME,aAAa,GAAGV,MAAM,CAACS,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4BP,OAAO,CAACS,IAAR,CAAa,CAAb,CAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeT,OAAO,CAACS,IAAR,CAAa,CAAb,CAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA,CAtBA;MAAMD,a;;AAwBN,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA,IAAxC;AAA8CC,IAAAA;AAA9C,MAAsDN,IAA5D;AACA,sBACE,QAAC,aAAD;AAAA,4BACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,KAAIE,QAAS,IAAGI,GAAI,EAA/B;AAAA,kBAAmCF;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEF,QAAnB;AAA6B,MAAA,aAAa,EAAE,IAAIK,IAAJ,CAASN,aAAT;AAA5C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEE;AAAZ;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAZD;;MAAMN,Q;;AAcN,MAAMS,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,eAAhB;AAAiCC,EAAAA;AAAjC,CAAD,KAAgD;AAC/D,MAAIF,KAAJ,EAAW;AACT,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,sBAAD;AAAA,gBACGC,eAAe,iBACd,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,EAAE,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,EASG,CAACC,OAAD,IAAYH,KAAZ,iBACC;AAAA,gBACGA,KAAK,CAACI,GAAN,CAAWb,IAAD,iBACT,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,SAA2BA,IAAI,CAACM,GAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvBD;;MAAME,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport palette from '../../lib/styles/palette';\nimport Button from '../common/Button';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport { Link } from 'react-router-dom';\n\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 3rem;\n`;\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\nconst PostItem = ({ post }) => {\n  const { publishedDate, username, tags, title, body, _id } = post;\n  return (\n    <PostItemBlock>\n      <h2>\n        <Link to={`/@${username}/${_id}`}>{title}</Link>\n      </h2>\n      <SubInfo username={username} publishedDate={new Date(publishedDate)} />\n      <Tags tags={tags} />\n      <p>{body}</p>\n    </PostItemBlock>\n  );\n};\n\nconst PostList = ({ posts, error, showWriteButton, loading }) => {\n  if (error) {\n    return <PostListBlock>Error Page</PostListBlock>;\n  }\n  return (\n    <PostListBlock>\n      <WritePostButtonWrapper>\n        {showWriteButton && (\n          <Button cyan to=\"/write\">\n            New Post\n          </Button>\n        )}\n      </WritePostButtonWrapper>\n      {/*  로딩 중 아니고, 포스트 배열이 존재할 때만 보여줌 */}\n      {!loading && posts && (\n        <div>\n          {posts.map((post) => (\n            <PostItem post={post} key={post._id}></PostItem>\n          ))}\n        </div>\n      )}\n    </PostListBlock>\n  );\n};\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}