{"ast":null,"code":"import _defineProperty from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _handleActions;var _marked=/*#__PURE__*/_regeneratorRuntime.mark(logoutSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(userSaga);import{createAction,handleActions}from'redux-actions';import{takeLatest,call}from'redux-saga/effects';import*as authAPI from'../lib/api/auth';import createRequestSaga,{createRequestActionTypes}from'../lib/createRequestSaga';var TEMP_SET_USER='user/TEMP_SET_USER';// 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nvar _createRequestActionT=createRequestActionTypes('user/CHECK'),_createRequestActionT2=_slicedToArray(_createRequestActionT,3),CHECK=_createRequestActionT2[0],CHECK_SUCCESS=_createRequestActionT2[1],CHECK_FAILURE=_createRequestActionT2[2];var LOGOUT='user/LOGOUT';export var tempSetUser=createAction(TEMP_SET_USER,function(user){return user;});export var check=createAction(CHECK);export var logout=createAction(LOGOUT);var checkSaga=createRequestSaga(CHECK,authAPI.check);function checkFailureSaga(){try{localStorage.removeItem('user');// localStorage 에서 user 제거하고\n}catch(e){console.log('localStorage is not working');}}function logoutSaga(){return _regeneratorRuntime.wrap(function logoutSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(authAPI.logout);case 3:// logout API 호출\nlocalStorage.removeItem('user');// localStorage 에서 user 제거\n_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 9:case\"end\":return _context.stop();}}},_marked,null,[[0,6]]);}export function userSaga(){return _regeneratorRuntime.wrap(function userSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(CHECK,checkSaga);case 2:_context2.next=4;return takeLatest(CHECK_FAILURE,checkFailureSaga);case 4:_context2.next=6;return takeLatest(LOGOUT,logoutSaga);case 6:case\"end\":return _context2.stop();}}},_marked2);}var initialState={user:null,checkError:null};export default handleActions((_handleActions={},_defineProperty(_handleActions,TEMP_SET_USER,function(state,_ref){var user=_ref.payload;return _objectSpread(_objectSpread({},state),{},{user:user});}),_defineProperty(_handleActions,CHECK_SUCCESS,function(state,_ref2){var user=_ref2.payload;return _objectSpread(_objectSpread({},state),{},{user:user,checkError:null});}),_defineProperty(_handleActions,CHECK_FAILURE,function(state,_ref3){var error=_ref3.payload;return _objectSpread(_objectSpread({},state),{},{user:null,checkError:error});}),_defineProperty(_handleActions,LOGOUT,function(state){return _objectSpread(_objectSpread({},state),{},{user:null});}),_handleActions),initialState);","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/modules/user.js"],"names":["logoutSaga","userSaga","createAction","handleActions","takeLatest","call","authAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","user","check","logout","checkSaga","checkFailureSaga","localStorage","removeItem","e","console","log","initialState","checkError","state","payload","error"],"mappings":"iwBA4BUA,U,iDASOC,Q,EArCjB,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,eAA5C,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAiC,oBAAjC,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,iBAAP,EACEC,wBADF,KAEO,0BAFP,CAIA,GAAMC,CAAAA,aAAa,CAAG,oBAAtB,CAA4C;AAC5C;0BAC8CD,wBAAwB,CACpE,YADoE,C,gEAA/DE,K,2BAAOC,a,2BAAeC,a,2BAG7B,GAAMC,CAAAA,MAAM,CAAG,aAAf,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAGZ,YAAY,CAACO,aAAD,CAAgB,SAACM,IAAD,QAAUA,CAAAA,IAAV,EAAhB,CAAhC,CACP,MAAO,IAAMC,CAAAA,KAAK,CAAGd,YAAY,CAACQ,KAAD,CAA1B,CACP,MAAO,IAAMO,CAAAA,MAAM,CAAGf,YAAY,CAACW,MAAD,CAA3B,CAEP,GAAMK,CAAAA,SAAS,CAAGX,iBAAiB,CAACG,KAAD,CAAQJ,OAAO,CAACU,KAAhB,CAAnC,CAEA,QAASG,CAAAA,gBAAT,EAA4B,CAC1B,GAAI,CACFC,YAAY,CAACC,UAAb,CAAwB,MAAxB,EAAiC;AAClC,CAAC,MAAOC,CAAP,CAAU,CACVC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACD,CACF,CAED,QAAUxB,CAAAA,UAAV,sJAEI,MAAMK,CAAAA,IAAI,CAACC,OAAO,CAACW,MAAT,CAAV,CAFJ,OAEgC;AAC5BG,YAAY,CAACC,UAAb,CAAwB,MAAxB,EAAiC;AAHrC,8EAKIE,OAAO,CAACC,GAAR,cALJ,mEASA,MAAO,SAAUvB,CAAAA,QAAV,wIACL,MAAMG,CAAAA,UAAU,CAACM,KAAD,CAAQQ,SAAR,CAAhB,CADK,wBAEL,MAAMd,CAAAA,UAAU,CAACQ,aAAD,CAAgBO,gBAAhB,CAAhB,CAFK,wBAGL,MAAMf,CAAAA,UAAU,CAACS,MAAD,CAASb,UAAT,CAAhB,CAHK,wDAMP,GAAMyB,CAAAA,YAAY,CAAG,CACnBV,IAAI,CAAE,IADa,CAEnBW,UAAU,CAAE,IAFO,CAArB,CAKA,cAAevB,CAAAA,aAAa,mDAEvBM,aAFuB,CAEP,SAACkB,KAAD,UAAmBZ,CAAAA,IAAnB,MAAUa,OAAV,uCACZD,KADY,MAEfZ,IAAI,CAAJA,IAFe,IAFO,iCAMvBJ,aANuB,CAMP,SAACgB,KAAD,WAAmBZ,CAAAA,IAAnB,OAAUa,OAAV,uCACZD,KADY,MAEfZ,IAAI,CAAJA,IAFe,CAGfW,UAAU,CAAE,IAHG,IANO,iCAWvBd,aAXuB,CAWP,SAACe,KAAD,WAAmBE,CAAAA,KAAnB,OAAUD,OAAV,uCACZD,KADY,MAEfZ,IAAI,CAAE,IAFS,CAGfW,UAAU,CAAEG,KAHG,IAXO,iCAgBvBhB,MAhBuB,CAgBd,SAACc,KAAD,wCACLA,KADK,MAERZ,IAAI,CAAE,IAFE,IAhBc,kBAqB1BU,YArB0B,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest, call } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n  'user/CHECK',\n);\nconst LOGOUT = 'user/LOGOUT';\n\nexport const tempSetUser = createAction(TEMP_SET_USER, (user) => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user'); // localStorage 에서 user 제거하고\n  } catch (e) {\n    console.log('localStorage is not working');\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout); // logout API 호출\n    localStorage.removeItem('user'); // localStorage 에서 user 제거\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\n\nconst initialState = {\n  user: null,\n  checkError: null,\n};\n\nexport default handleActions(\n  {\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\n      ...state,\n      user,\n    }),\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\n      ...state,\n      user,\n      checkError: null,\n    }),\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      user: null,\n      checkError: error,\n    }),\n    [LOGOUT]: (state) => ({\n      ...state,\n      user: null,\n    }),\n  },\n  initialState,\n);\n"]},"metadata":{},"sourceType":"module"}