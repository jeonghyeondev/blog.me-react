{"ast":null,"code":"import _defineProperty from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _handleActions;var _marked=/*#__PURE__*/_regeneratorRuntime.mark(authSaga);import{createAction,handleActions}from'redux-actions';import produce from'immer';import{takeLatest}from'redux-saga/effects';import createRequestSaga,{createRequestActionTypes}from'../lib/createRequestSaga';import*as authAPI from'../lib/api/auth';var CHANGE_FIELD='auth/CHANGE_FIELD';var INITIALIZE_FORM='auth/INITIALIZE_FORM';var _createRequestActionT=createRequestActionTypes('auth/REGISTER'),_createRequestActionT2=_slicedToArray(_createRequestActionT,3),REGISTER=_createRequestActionT2[0],REGISTER_SUCCESS=_createRequestActionT2[1],REGISTER_FAILURE=_createRequestActionT2[2];var _createRequestActionT3=createRequestActionTypes('auth/LOGIN'),_createRequestActionT4=_slicedToArray(_createRequestActionT3,3),LOGIN=_createRequestActionT4[0],LOGIN_SUCCESS=_createRequestActionT4[1],LOGIN_FAILURE=_createRequestActionT4[2];export var changeField=createAction(CHANGE_FIELD,function(_ref){var form=_ref.form,key=_ref.key,value=_ref.value;return{form:form,// register , login\nkey:key,// username, password, passwordConfirm\nvalue:value// 실제 바꾸려는 값\n};});export var initializeForm=createAction(INITIALIZE_FORM,function(form){return form;});// register / login\nexport var register=createAction(REGISTER,function(_ref2){var username=_ref2.username,password=_ref2.password;return{username:username,password:password};});export var login=createAction(LOGIN,function(_ref3){var username=_ref3.username,password=_ref3.password;return{username:username,password:password};});// saga 생성\nvar registerSaga=createRequestSaga(REGISTER,authAPI.register);var loginSaga=createRequestSaga(LOGIN,authAPI.login);export function authSaga(){return _regeneratorRuntime.wrap(function authSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return takeLatest(REGISTER,registerSaga);case 2:_context.next=4;return takeLatest(LOGIN,loginSaga);case 4:case\"end\":return _context.stop();}}},_marked);}var initialState={register:{username:'',password:'',passwordConfirm:''},login:{username:'',password:''},auth:null,authError:null};var auth=handleActions((_handleActions={},_defineProperty(_handleActions,CHANGE_FIELD,function(state,_ref4){var _ref4$payload=_ref4.payload,form=_ref4$payload.form,key=_ref4$payload.key,value=_ref4$payload.value;return produce(state,function(draft){draft[form][key]=value;// 예: state.register.username을 바꾼다\n});}),_defineProperty(_handleActions,INITIALIZE_FORM,function(state,_ref5){var _objectSpread2;var form=_ref5.payload;return _objectSpread(_objectSpread({},state),{},(_objectSpread2={},_defineProperty(_objectSpread2,form,initialState[form]),_defineProperty(_objectSpread2,\"authError\",null),_objectSpread2));}),_defineProperty(_handleActions,REGISTER_SUCCESS,function(state,_ref6){var auth=_ref6.payload;return _objectSpread(_objectSpread({},state),{},{authError:null,auth:auth});}),_defineProperty(_handleActions,REGISTER_FAILURE,function(state,_ref7){var error=_ref7.payload;return _objectSpread(_objectSpread({},state),{},{authError:error});}),_defineProperty(_handleActions,LOGIN_SUCCESS,function(state,_ref8){var auth=_ref8.payload;return _objectSpread(_objectSpread({},state),{},{authError:null,auth:auth});}),_defineProperty(_handleActions,LOGIN_FAILURE,function(state,_ref9){var error=_ref9.payload;return _objectSpread(_objectSpread({},state),{},{authError:error});}),_handleActions),initialState);export default auth;","map":{"version":3,"sources":["/Users/jeonghyeon/Desktop/kjh/dev/blog-react/blog-frontend/src/modules/auth.js"],"names":["authSaga","createAction","handleActions","produce","takeLatest","createRequestSaga","createRequestActionTypes","authAPI","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","initializeForm","register","username","password","login","registerSaga","loginSaga","initialState","passwordConfirm","auth","authError","state","payload","draft","error"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\n  'auth/REGISTER',\n);\n\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\n  'auth/LOGIN',\n);\n\nexport const changeField = createAction(\n  CHANGE_FIELD,\n  ({ form, key, value }) => ({\n    form, // register , login\n    key, // username, password, passwordConfirm\n    value, // 실제 바꾸려는 값\n  }),\n);\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form); // register / login\nexport const register = createAction(REGISTER, ({ username, password }) => ({\n  username,\n  password,\n}));\nexport const login = createAction(LOGIN, ({ username, password }) => ({\n  username,\n  password,\n}));\n\n// saga 생성\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\n\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n  },\n  login: {\n    username: '',\n    password: '',\n  },\n  auth: null,\n  authError: null,\n};\n\nconst auth = handleActions(\n  {\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\n      produce(state, (draft) => {\n        draft[form][key] = value; // 예: state.register.username을 바꾼다\n      }),\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\n      ...state,\n      [form]: initialState[form],\n      authError: null, // 폼 전환 시 회원 인증 에러 초기화\n    }),\n    // 회원가입 성공\n    [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 회원가입 실패\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n    // 로그인 성공\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 로그인 실패\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n  },\n  initialState,\n);\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}